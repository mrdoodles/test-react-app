name: CI

on:
  pull_request:
    branches: [develop]
  push:
    branches: [develop]

jobs:
  build:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          # path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          path: $HOME/.yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - run: corepack enable
      - run: yarn set version stable
      - run: yarn install --frozen-lockfile
      - run: yarn format:check
      - run: yarn test --coverage
        env:
          CI: true

      # - run: ls -a $HOME
      # - run: ls -a $HOME/.yarn
      # - run: ls -a $HOME/.yarn/berry
      # - run: du -h $HOME/.yarn/berry/cache/

      - name: Build Project
        if: github.event_name == 'push'
        run: yarn build

      - name: Deploy to Staging
        if: github.event_name == 'push'
        run: npx surge --project build --domain fantastic-dude.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
